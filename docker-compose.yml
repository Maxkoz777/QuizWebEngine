version: "3"

services:
  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: on-failure
    environment:
      IP: postgres
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: quizengine
      DB_PORT: 5432
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "8081:8081"
    environment:
      BACK_URL: "http://localhost:8080"
    restart: on-failure
    depends_on:
      - backend
  postgres:
    container_name: postgres
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: quizengine
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
  grafana:
    image: grafana/grafana:8.2.6
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - elasticsearch
    restart: always
  prometheus:
    image: prom/prometheus:v2.43.0
    volumes:
      - ./backend/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
  logstash:
    image: docker.elastic.co/logstash/logstash:7.16.3
    container_name: logstash
    ports:
      - "9600:9600"
      - "5044:5044"
      - "4560:4560"
    volumes:
      - ./backend/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    depends_on:
      - elasticsearch
volumes:
  elasticsearch_data:
    driver: local